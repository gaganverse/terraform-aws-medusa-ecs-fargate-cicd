name: Terraform CI/CD - Dev & Prod Environments

on:
  push:
    branches:
      - dev
      - main
  workflow_dispatch:  # allow manual trigger for prod

env:
  TF_VERSION: 1.6.0
  AWS_REGION: us-east-1

jobs:
  terraform:
    name: Deploy Infrastructure with Terraform
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout source code
        uses: actions/checkout@v3

      # Step 2: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      # Step 3: Configure AWS credentials securely
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 4: Set Terraform working directory based on environment
      - name: Set working directory based on branch
        id: set_env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "env_dir=dev" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "env_dir=prod" >> $GITHUB_OUTPUT
          fi

      # Step 5: Initialize Terraform
      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform/${{ steps.set_env.outputs.env_dir }}

      # Step 6: Terraform Validate
      - name:  Terraform Validate
        run: terraform validate
        working-directory: ./terraform/${{ steps.set_env.outputs.env_dir }}

      # Step 7: Terraform Plan
      - name: Terraform Plan
        run: terraform plan
        working-directory: ./terraform/${{ steps.set_env.outputs.env_dir }}

      # Step 8: Terraform Apply for dev (auto) and prod (manual approval)
      - name: Terraform Apply
        if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
        working-directory: ./terraform/${{ steps.set_env.outputs.env_dir }}

